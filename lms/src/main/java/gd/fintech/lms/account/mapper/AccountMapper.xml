<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.account.mapper.AccountMapper">
	<!-- 계정 정보(계정ID, 계정권한)를 조회하는 쿼리 -->
	<select id="selectMemberById" parameterType="gd.fintech.lms.account.vo.Account" resultType="gd.fintech.lms.account.vo.Account">
		SELECT 
			account_id accountId, 
			account_level accountLevel
		FROM account
		WHERE 
			account_id = #{accountId}
			AND account_pw = PASSWORD(#{accountPw})
	</select>
	
	<!-- 모든 계정의 목록을 조회하는 쿼리 -->
	<select id="selectMemberAll" parameterType="java.util.Map" resultType="gd.fintech.lms.account.vo.Account">
		SELECT 
			account_id accountId,
			account_state accountState,
			account_level accountLevel,
			account_createdate accountCreateDate,
			account_updatedate accountUpdateDate
		FROM account 
		ORDER BY account_createdate DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 계정을 입력하는 쿼리(계정 상태는 대기가 기본값) -->
	<insert id="insertAccount" parameterType="gd.fintech.lms.dto.SignUpForm">
		INSERT INTO account (
			account_id,
			account_pw,
			account_level,
			account_createdate,
			account_updatedate)
		VALUES(
			#{accountId},
			PASSWORD(#{accountPw}),
			#{accountLevel},
			NOW(),
			NOW()
		)
	</insert>
	
	<!-- 계정 상태를 활성화로 수정하는 쿼리 -->
	<update id="updateAccountStateActiveByAccountId" parameterType="String">
		UPDATE account
		SET 
			account_state = "활성화" ,
			account_updatedate = NOW()
		WHERE account_id = #{accountId}
	</update>
	
	<!-- 계정 상태를 탈퇴로 수정하는 쿼리  -->
	<update id="updateAccountStateInvalidByAccountId" parameterType="String">
		UPDATE account
		SET 
			account_state = "탈퇴" ,
			account_updatedate = NOW()
		WHERE account_id = #{accountId}
	</update>
	
	<!-- 계정 상태를 거절로 수정하는 쿼리  -->
	<update id="updateAccountStateRejectByAccountId" parameterType="String">
		UPDATE account
		SET 
			account_state = "거절" ,
			account_updatedate = NOW()
		WHERE account_id = #{accountId}
	</update>
	
	<!-- 계정 비밀번호를 수정하는 메소드 -->
	<update id="updateAccountPasswordByAccountId" parameterType="gd.fintech.lms.account.vo.Account">
		UPDATE account
		SET 
			account_pw = PASSWORD(#{accountPw}),
			account_updatedate = NOW()
		WHERE account_id = #{accountId}
	</update>
</mapper>