<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.admin.mapper.ManagerQueueMapper">
	<!-- 회원가입 승인대기 중인 운영자 목록을 페이징하여 출력하는 쿼리문 -->
	<select id="selectManagerQueueList" parameterType="java.util.Map" resultType="gd.fintech.lms.admin.vo.ManagerQueue">
		SELECT
			m.account_id accountId,
			m.manager_name managerName,
			m.manager_email managerEmail,
			m.manager_phone managerPhone
		FROM manager_queue m
		LEFT JOIN account a
		ON m.account_id = a.account_id
		<where>
			<if test="searchKeyword != null">
				<if test="searchType == 'all' or searchType == 'name'">
					manager_name LIKE CONCAT('%', #{searchKeyword}, '%')
				</if>
				<if test="searchType == 'all' or searchType == 'email'">
					OR manager_email LIKE CONCAT('%', #{searchKeyword}, '%')
				</if>
				<if test="searchType == 'all' or searchType == 'phone'">
					OR manager_phone LIKE CONCAT('%', #{searchKeyword}, '%')
				</if>
			</if>
		</where>
		ORDER BY a.account_createdate DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 회원가입 승인대기 중인 운영자 목록의 페이징을 위해 총 항목수를 출력하는 쿼리문 -->
	<select id="selectManagerQueueCount" parameterType="String" resultType="int">
		SELECT
			COUNT(*)
		FROM manager_queue
		<where>
			<if test="searchKeyword != null">
				<if test="searchType == 'all' or searchType == 'name'">
					manager_name LIKE CONCAT('%', #{searchKeyword}, '%')
				</if>
				<if test="searchType == 'all' or searchType == 'email'">
					OR manager_email LIKE CONCAT('%', #{searchKeyword}, '%')
				</if>
				<if test="searchType == 'all' or searchType == 'phone'">
					OR manager_phone LIKE CONCAT('%', #{searchKeyword}, '%')
				</if>
			</if>
		</where>
	</select>
	
	<!-- 회원가입 승인대기 중인 운영자 정보를 출력하는 쿼리문 -->
	<select id="selectManagerQueueDetail" parameterType="String" resultType="gd.fintech.lms.admin.vo.ManagerQueue">
		SELECT
			account_id accountId,
			manager_email managerEmail,
			manager_name managerName,
			manager_phone managerPhone,
			manager_gender managerGender,
			manager_birth managerBirth,
			manager_address_main managerAddressMain,
			manager_address_sub managerAddressSub
		FROM manager_queue
		WHERE account_id = #{accountId}
	</select>
	
	<!-- 운영자가 회원가입 시 자신의 정보를 입력하는 쿼리문 -->
	<insert id="insertManagerQueue" parameterType="gd.fintech.lms.admin.vo.ManagerQueue">
		INSERT INTO manager_queue (
			account_id,
			manager_email,
			manager_name,
			manager_phone,
			manager_gender,
			manager_birth,
			manager_address_main,
			manager_address_sub
		) VALUES (
			#{accountId},
			#{managerEmail},
			#{managerName},
			#{managerPhone},
			#{managerGender},
			#{managerBirth},
			#{managerAddressMain},
			#{managerAddressSub}
		)
	</insert>
	
	<!-- 관리자가 운영자의 회원가입을 승인 또는 거부 시 운영자의 개인정보를 삭제하는 쿼리문 -->
	<delete id="deleteManagerQueue" parameterType="String">
		DELETE FROM manager_queue
		WHERE account_id = #{accountId}
	</delete>
</mapper>