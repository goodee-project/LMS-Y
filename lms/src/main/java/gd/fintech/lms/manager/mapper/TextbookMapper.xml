<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.manager.mapper.TextbookMapper">
	<!-- 교재 리스트를 페이징하여 출력하는 쿼리문 -->
	<select id="selectTextbookList" parameterType="java.util.Map" resultType="gd.fintech.lms.manager.vo.Textbook">
		SELECT
			textbook_isbn textbookISBN,
			textbook_title textbookTitle,
			textbook_writer textbookWriter,
			textbook_publisher textbookPublisher
		FROM textbook
		<where>
			<if test="searchKeyword != null">
				<choose>
					<when test="searchType == 'all'">
						textbook_isbn LIKE CONCAT('%', #{searchKeyword}, '%')
						OR textbook_title LIKE CONCAT('%', #{searchKeyword}, '%')
						OR textbook_writer LIKE CONCAT('%', #{searchKeyword}, '%')
						OR textbook_publisher LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchType == 'ISBN'">
						textbook_isbn LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchType == 'title'">
						textbook_title LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchType == 'writer'">
						textbook_writer LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchType == 'publisher'">
						textbook_publisher LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
				</choose>
			</if>
		</where>
		ORDER BY textbook_createdate DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 교재 리스트의 페이징을 위해 총 항목수를 출력하는 쿼리문 -->
	<select id="selectTextbookCount" parameterType="String" resultType="int">
		SELECT
			COUNT(*)
		FROM textbook
		<where>
			<if test="searchKeyword != null">
				<choose>
					<when test="searchType == 'all'">
						textbook_isbn LIKE CONCAT('%', #{searchKeyword}, '%')
						OR textbook_title LIKE CONCAT('%', #{searchKeyword}, '%')
						OR textbook_writer LIKE CONCAT('%', #{searchKeyword}, '%')
						OR textbook_publisher LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchType == 'ISBN'">
						textbook_isbn LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchType == 'title'">
						textbook_title LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchType == 'writer'">
						textbook_writer LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchType == 'publisher'">
						textbook_publisher LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- 교재 정보를 출력하는 쿼리문 -->
	<select id="selectTextbookDetail" parameterType="String" resultType="gd.fintech.lms.manager.vo.Textbook">
		SELECT
			textbook_isbn textbookISBN,
			textbook_title textbookTitle,
			textbook_writer textbookWriter,
			textbook_publisher textbookPublisher,
			textbook_publishdate textbookPublishDate,
			textbook_info textbookInfo,
			textbook_price textbookPrice,
			textbook_createdate textbookCreateDate,
			textbook_updatedate textbookUpdateDate
		FROM textbook
		WHERE textbook_isbn = #{textbookISBN}
	</select>
	
	<!-- 교재 정보를 입력하는 쿼리문 -->
	<insert id="insertTextbook" parameterType="gd.fintech.lms.manager.vo.Textbook">
		INSERT INTO textbook(
			textbook_isbn,
			textbook_title,
			textbook_writer,
			textbook_publisher,
			textbook_publishdate,
			textbook_info,
			textbook_price,
			textbook_createdate,
			textbook_updatedate
		) VALUES (
			#{textbookISBN},
			#{textbookTitle},
			#{textbookWriter},
			#{textbookPublisher},
			#{textbookPublishDate},
			#{textbookInfo},
			#{textbookPrice},
			NOW(),
			NOW()
		)
	</insert>
	
	<!-- 교재 정보를 수정하는 쿼리문 -->
	<update id="updateTextbook" parameterType="gd.fintech.lms.manager.vo.Textbook">
		UPDATE textbook
		SET
			textbook_title = #{textbookTitle},
			textbook_writer = #{textbookWriter},
			textbook_publisher = #{textbookPublisher},
			textbook_publishdate = #{textbookPublishDate},
			textbook_info = #{textbookInfo},
			textbook_price = #{textbookPrice},
			textbook_updatedate = NOW()
		WHERE textbook_isbn = #{textbookISBN}
	</update>
</mapper>