<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.message.mapper.MessageMapper">
	<!-- 받은 쪽지 리스트를 조회하는 쿼리 -->
	<select id="selectReceiveMessageList" parameterType="String" resultType="gd.fintech.lms.message.vo.Message">
		SELECT 
			message_no messageNo,
			from_id fromId,
			from_name fromName,
			message_datetime messageDateTime,
			is_confirm isConfirm
		FROM message
		WHERE to_id = #{toId}
		ORDER BY message_datetime DESC
	</select>
	
	<!-- 보낸 쪽지 리스트를 조회하는 쿼리 -->
	<select id="selectSendMessageList" parameterType="String" resultType="gd.fintech.lms.message.vo.Message">
		SELECT
			message_no messageNo,
			to_id toId,
			message_datetime messageDateTime,
			is_confirm isConfirm
		FROM message
		WHERE from_id = #{fromId}
		ORDER BY message_datetime DESC
	</select>
	
	<!-- 쪽지 상세보기 쿼리 -->
	<select id="selectMessageDetail" parameterType="int" resultType="gd.fintech.lms.message.vo.Message">
		SELECT 
			message_no messageNo, 
			from_id fromId,
			to_id toId,
			from_name fromName,
			message_content messageContent,
			message_datetime messageDateTime,
			is_confirm isConfirm
		FROM message
		WHERE message_no = #{messageNo}		
	</select>
	
	<!-- 쪽지 입력하는 쿼리 -->
	<insert id="insertSendMessage" parameterType="gd.fintech.lms.message.vo.Message">
		INSERT INTO message(
			from_id,
			to_id,
			from_name,
			message_content,
			message_datetime
		)VALUES(
			#{fromId},
			#{toId},
			#{fromName},
			#{messageContent},
			NOW()
		)	
	</insert>
	
	<!-- 수신/발신 쪽지 삭제 기능을 하는 쿼리 -->
	<delete id="deleteMessageByMessageNo" parameterType="int">
		DELETE FROM message
		WHERE message_no = #{messageNo}
	</delete>
	
	<!-- 쪽지 확인상태를 읽음으로 수정하는 쿼리 -->
	<update id="updateMessageConfirm" parameterType="int">
		UPDATE message
		SET is_confirm = "Y"
		WHERE message_no = #{messageNo}
	</update>
	
	<!-- 쪽지보내기 위한 아이디를 검색하는 쿼리 -->
	<select id="selectReceiverInfoByAccountId" parameterType="String" resultType="java.util.Map">
		SELECT 
			a.account_id toId,
			CASE 
				WHEN ad.admin_name IS NOT NULL THEN ad.admin_name
				WHEN m.manager_name IS NOT NULL THEN m.manager_name
				WHEN t.teacher_name IS NOT NULL THEN t.teacher_name
				WHEN s.student_name IS NOT NULL THEN s.student_name 
			END accountName
		FROM account a
		LEFT JOIN admin ad ON a.account_id = ad.account_id
		LEFT JOIN manager m ON a.account_id = m.account_id
		LEFT JOIN teacher t ON a.account_id = t.account_id
		LEFT JOIN student s ON a.account_id = s.account_id
		WHERE a.account_id = #{accountId} AND a.account_state = "활성화"
	</select>
	
	<!-- 발신자의 정보를 조회하는 메소드 -->
	<select id="selectCallerInfoAccountId" parameterType="String" resultType="java.util.Map">
		SELECT 
			a.account_id fromId,
			CASE
				WHEN ad.admin_name IS NOT NULL THEN ad.admin_name
				WHEN m.manager_name IS NOT NULL THEN m.manager_name
				WHEN t.teacher_name IS NOT NULL THEN t.teacher_name
				WHEN s.student_name IS NOT NULL THEN s.student_name
			END fromName
		FROM account a
		LEFT JOIN admin ad ON a.account_id = ad.account_id
		LEFT JOIN manager m ON a.account_id = m.account_id
		LEFT JOIN teacher t ON a.account_id = t.account_id
		LEFT JOIN student s ON a.account_id = s.account_id
		WHERE a.account_id = #{accountId};
	</select>
</mapper>