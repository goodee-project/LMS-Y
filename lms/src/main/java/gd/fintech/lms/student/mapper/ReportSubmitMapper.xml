<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.student.mapper.ReportSubmitMapper">
	<!-- 강좌에 관련된 과제의 리스트 출력 -->
	<select id="selectReportListByPage" parameterType="java.util.Map" resultType="gd.fintech.lms.teacher.vo.Report">
		SELECT
		    r.report_no reportNo,
		    r.lecture_no lectureNo,
		    r.report_title reportTitle,
		    r.report_content reportContent,
		    r.report_createdate reportCreateDate,
		    r.report_updatedate reportUpdateDate,
		    r.report_startdate reportStartDate,
		    r.report_enddate reportEndDate
		FROM report r
		    INNER JOIN lecture l
		        ON r.lecture_no = l.lecture_no
		    INNER JOIN class_registration c
		        ON l.lecture_no = c.lecture_no
		WHERE c.account_id = #{accountId}
			AND r.lecture_no = #{lectureNo}
		ORDER BY r.report_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	<!-- 과제 정보, 과제제출 정보와 과제제출 첨부파일을 위한 resultMap -->
	<resultMap type="gd.fintech.lms.teacher.vo.Report" id="resultReportDetail">
		<result property="reportNo" column="report_no" />
		<result property="lectureNo" column="lecture_no" />
		<result property="reportTitle" column="report_title" />
		<result property="reportContent" column="report_content" />
		<result property="reportCreateDate" column="report_createdate" />
		<result property="reportUpdateDate" column="report_updatedate" />
		<result property="reportStartDate" column="report_startdate" />
		<result property="reportEndDate" column="report_enddate" />
		<collection property="reportSubmitList" ofType="gd.fintech.lms.student.vo.ReportSubmit">
			<result property="reportSubmitNo" column="report_submit_no" />
			<result property="accountId" column="account_id" />
			<result property="reportSubmitTitle" column="report_submit_title" />
			<result property="reportSubmitContent" column="report_submit_content" />
			<result property="reportSubmitScore" column="report_submit_score" />
			<result property="reportSubmitFeedback" column="report_submit_feedback" />
			<result property="reportSubmitCreateDate" column="report_submit_createdate" />
			<result property="reportSubmitUpdateDate" column="report_submit_updatedate" />
			<collection property="reportSubmitFileList" ofType="gd.fintech.lms.student.vo.ReportSubmitFile">
				<result property="reportSubmitFileUUID" column="report_submit_file_uuid" />
				<result property="reportSubmitFileOriginal" column="report_submit_file_original" />
				<result property="reportSubmitFileSize" column="report_submit_file_size" />
				<result property="reportSubmitFileType" column="report_submit_file_type" />
				<result property="reportSubmitFileCount" column="report_submit_file_count" />
				<result property="reportSubmitFileCreateDate" column="report_submit_file_createdate" />
			</collection>
		</collection>
	</resultMap>
	<!-- 과제를 제출한 정보 상세보기 -->
	<select id="selectReportDetail" parameterType="java.util.Map" resultMap="resultReportDetail">
		SELECT
			r.report_no,
			r.lecture_no,
			r.report_title,
			r.report_content,
			r.report_createdate,
			r.report_updatedate,
			r.report_startdate,
			r.report_enddate,
			rs.report_submit_no,
			rs.account_id,
			rs.report_submit_title,
			rs.report_submit_content,
			rs.report_submit_score,
			rs.report_submit_feedback,
			rs.report_submit_createdate,
			rs.report_submit_updatedate,
			rsf.report_submit_file_uuid,
			rsf.report_submit_file_original,
			rsf.report_submit_file_size,
			rsf.report_submit_file_type,
			rsf.report_submit_file_count,
			rsf.report_submit_file_createdate
		FROM report r
			LEFT JOIN report_submit rs
				ON (r.report_no = rs.report_no AND rs.account_id = #{accountId})
			LEFT JOIN report_submit_file rsf
				ON rs.report_submit_no = rsf.report_submit_no
		WHERE r.report_no = #{reportNo}
	</select>
	<!-- 과제제출 정보와 과제제출 첨부파일을 위한 resultMap -->
	<resultMap type="gd.fintech.lms.student.vo.ReportSubmit" id="resultReportSubmitDetail">
		<result property="reportSubmitNo" column="report_submit_no" />
		<result property="reportNo" column="report_no" />
		<result property="accountId" column="account_id" />
		<result property="reportSubmitTitle" column="report_submit_title" />
		<result property="reportSubmitContent" column="report_submit_content" />
		<result property="reportSubmitScore" column="report_submit_score" />
		<result property="reportSubmitFeedback" column="report_submit_feedback" />
		<result property="reportSubmitCreateDate" column="report_submit_createdate" />
		<result property="reportSubmitUpdateDate" column="report_submit_updatedate" />
		<collection property="reportSubmitFileList" ofType="gd.fintech.lms.student.vo.ReportSubmitFile">
			<result property="reportSubmitFileUUID" column="report_submit_file_uuid" />
			<result property="reportSubmitFileOriginal" column="report_submit_file_original" />
			<result property="reportSubmitFileSize" column="report_submit_file_size" />
			<result property="reportSubmitFileType" column="report_submit_file_type" />
			<result property="reportSubmitFileCount" column="report_submit_file_count" />
			<result property="reportSubmitFileCreateDate" column="report_submit_file_createdate" />
		</collection>
	</resultMap>
	<!-- 과제제출와 과제 제출 첨부파일 -->
	<select id="selectReportSubmitDetail" parameterType="int" resultMap="resultReportSubmitDetail">
		SELECT 	
			rs.report_submit_no,
			rs.report_no,
			rs.account_id,
			rs.report_submit_title,
			rs.report_submit_content,
			rs.report_submit_score,
			rs.report_submit_feedback,
			rs.report_submit_createdate,
			rs.report_submit_updatedate,
			rsf.report_submit_file_uuid,
			rsf.report_submit_file_original,
			rsf.report_submit_file_size,
			rsf.report_submit_file_type,
			rsf.report_submit_file_count,
			rsf.report_submit_file_createdate
		FROM report_submit rs
			LEFT JOIN report_submit_file rsf
				ON rs.report_submit_no = rsf.report_submit_no
		WHERE rs.report_submit_no = #{reportSubmitNo}
	</select>
	<!-- 과제제출한 정보만 가져오기 -->
	<select id="selectReportSubmitOne" parameterType="int" resultType="gd.fintech.lms.student.vo.ReportSubmit">
		SELECT 
			report_submit_no reportSubmitNo,
			report_no reportNo,
			account_id accountId,
			report_submit_updatedate reportSubmitUpdateDate,
			report_submit_title reportSubmitTitle,
			report_submit_content reportSubmitContent,
			report_submit_score reportSubmitScore,
			report_submit_feedback reportSubmitFeedback
		FROM report_submit
		WHERE report_submit_no = #{reportSubmitNo}
	</select>
	<!-- 과제 개수를 세기위한 셀렉트문 -->
	<select id="selectReportCount" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*)
		FROM report r
		   INNER JOIN class_registration c
		       ON r.lecture_no = c.lecture_no
		WHERE c.account_id = #{accountId}
		   AND r.lecture_no = #{lectureNo}
	</select>
	<!-- 특정 과제 번호에 해당되며 제출기한에 해당되는 과제 가져오기 -->
	<select id="selectReportDetailBySubmitDate" parameterType="int" resultType="gd.fintech.lms.teacher.vo.Report">
		SELECT
		  report_no reportNo,
		  report_title reportTitle
		FROM report
		WHERE report_no = #{reportNo}
		  AND report_startdate &lt;= NOW()
		  AND report_enddate &gt;= NOW()
	</select>
	
	<!-- 과제제출 정보 입력, 자동 증가값인 reportSubmitNo를 읽어오기위한 selectKey -->
	<insert id="insertReportSubmit" parameterType="gd.fintech.lms.student.vo.ReportSubmit">
		<selectKey resultType="int" keyProperty="reportSubmitNo" order="AFTER">
	  		SELECT LAST_INSERT_ID()
	  	</selectKey>
	  	INSERT INTO report_submit(
			report_no,
			account_id,
			report_submit_createdate,
			report_submit_updatedate,
			report_submit_title,
			report_submit_content
		) VALUES (
			#{reportNo},
			#{accountId},
			NOW(),
			NOW(),
			#{reportSubmitTitle},
			#{reportSubmitContent}
		)
	</insert>
	<!-- 과제제출 정보 수정 -->
	<update id="updateReportSubmit" parameterType="gd.fintech.lms.student.vo.ReportSubmit">
		UPDATE report_submit
		SET
			report_submit_updatedate = NOW(),
			report_submit_title = #{reportSubmitTitle},
			report_submit_content = #{reportSubmitContent}
		WHERE report_submit_no = #{reportSubmitNo}
	</update>
</mapper>