<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.student.mapper.StudentMapper">

	<!-- 학생이 볼 과제 -->
	<resultMap type="gd.fintech.lms.student.vo.Student" id="resultStudentReport">
		<result property="accountId" column="account_id"/>
		<result property="studentEmail" column="student_email"/>
		<result property="studentName" column="student_name"/>
		<result property="studentPhone" column="student_phone"/>
		<result property="studentGender" column="student_gender"/>
		<result property="studentBirth" column="student_birth"/>
		<result property="studentAddressMain" column="student_address_main"/>
		<result property="studentAddressSub" column="student_address_sub"/>
		<result property="studentAccessDate" column="student_accessdate"/>
		<result property="studentUpdateDate" column="student_updatedate"/>
		<result property="mangerIdAccess" column="manager_id_access"/>
		
		<collection property="lectureInfo" ofType="gd.fintech.lms.manager.vo.Lecture">
			<result property="lectureNo" column="lecture_no"/>
			<result property="accountId" column="account_id"/>
			<result property="subjectNo" column="subject_no"/>
			<result property="teacherName" column="teacher_name"/>
			<result property="lectureName" column="lecture_name"/>
			<result property="textbookISBN" column="textbook_isbn"/>
			<result property="lectureStartDate" column="lecture_startdate"/>
			<result property="lectureEndDate" column="lecture_enddate"/>
			<result property="lectureTotal" column="lecture_total"/>
			<result property="syllabusNo" column="syllabus_no"/>
			<result property="classroomNo" column="classroom_no"/>
			<result property="lectureCreateDate" column="lecture_createdate"/>
			<result property="lectureUpdateDate" column="lecture_updatedate"/>
			
			<collection property="reportInfoList" ofType="gd.fintech.lms.teacher.vo.Report">
				<result property="reportNo" column="report_no"/>
				<result property="lectureNo" column="lecture_no"/>
				<result property="reportTitle" column="report_title"/>
				<result property="reportContent" column="report_content"/>
				<result property="reportCreateDate" column="report_createdate"/>
				<result property="reportUpdateDate" column="report_updatedate"/>
				<result property="reportStartDate" column="report_startdate"/>
				<result property="reportEndDate" column="report_enddate"/>
				</collection>
		</collection>
	</resultMap>
	
	<!-- 학생 회원가입시 필요한 기본정보 -->
	<insert id="insertStudentFromQueue" parameterType="String">
	INSERT INTO student(
			account_id,
			student_email,
			student_name,
			student_phone,
			student_gender,
			student_birth,
			student_address_main,
			student_address_sub,
			student_accessdate ,
			student_updatedate ,
			<!-- manager_access_id -->
		) SELECT
			account_id,
			student_email,
			student_name,
			student_phone,
			student_gender,
			student_birth,
			student_address_main,
			student_address_sub,
			NOW(),
			NOW(),
			<!-- manager_access_id -->
		
	FROM student_queue
	WHERE account_id=#{accountId}
	</insert>
	<!-- 학생(내정보) 상세보기-->
	<select id="selectStudentOne" parameterType="String" resultType="gd.fintech.lms.student.vo.Student">
		SELECT
			account_id accountId,
			student_email studentEmail,
			student_name studentName,
			student_phone studentPhone,
			student_address_main studentAddressMain,
			student_address_sub studentAddressSub,
			student_gender studentGender,
			student_Image studentImage,
			student_accessdate studentAccessDate,
			student_updatedate studentUpdateDate,
			manager_id_access mangerIdAccess
		FROM 
			student
		WHERE account_id
		ORDER BY account_id  DESC
	</select>
	
	<!-- 학생 정보 수정 폼 -->
	<select id="updateStudentForm" parameterType="String" resultType="gd.fintech.lms.student.vo.Student">
		SELECT
			account_id accountId,
			student_email studentEmail,
			student_name studentName,
			student_phone studentPhone,
			student_address_main studentAddressMain,
			student_address_sub studentAddressSub,
			student_gender studentGender,
			student_Image studentImage,
			student_accessdate studentAccessDate,
			student_updatedate studentUpdateDate
		FROM 
			student
		WHERE account_id=#{accountId}
	</select>
	
	<!-- 학생 정보 수정 액션-->
	<update id="updateStudent" parameterType="gd.fintech.lms.student.vo.Student" >
		UPDATE student
		SET
			student_email=#{studentEamil},
			student_name=#{studentName},
			student_Phone=#{studentPhone},
			student_address_main=#{studentAddressMain},
			student_address_sub=#{studentAddressSub},
			student_gender=#{studentGender},
			student_birth=#{studentBirth},
			student_address_main=#{studentAdressMain},
			student_address_sub=#{studentAdressSub},
			student_updatedate=#{studentUpdatedate}
		WHERE account_id=#{accountId}
	</update>
</mapper>

