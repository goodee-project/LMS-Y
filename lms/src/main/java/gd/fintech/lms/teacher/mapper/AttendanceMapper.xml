<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.teacher.mapper.AttendanceMapper">
	<!-- 수강신청,학생,출석 테이블을 조인하여 학생들의 출석 상태 목록 -->
	<resultMap type="gd.fintech.lms.teacher.vo.Attendance" id="ResultTeacherAttendanceList">
		<result property="lectureNo" column="lecture_no"/>
		<result property="accountId" column="account_id"/>
		<result property="attendanceDay" column="attendance_day"/>
		<result property="attendanceCreateDate" column="attendance_createdate"/>
		<result property="attendanceUpdateDate" column="attendance_updatedate"/>
		<result property="attendanceState" column="attendance_state"/>
		<result property="attendanceRemark" column="attendance_remark"/>
		<collection property="student" ofType="gd.fintech.lms.student.vo.Student">
			<result property="studentName" column="student_name"/>
			<result property="studentPhone" column="student_phone"/>
			<result property="studentGender" column="student_gender"/>
			<result property="accountId" column="account_id"/>
		</collection>
	</resultMap>
	<select id="selectCalendarAttendanceList" parameterType="java.util.Map" resultMap="ResultTeacherAttendanceList">
		SELECT
			a.lecture_no,
			a.attendance_state,
			a.attendance_remark,
			a.attendance_day,
			s.account_id,
			s.student_name,
			s.student_gender,
			s.student_phone,
			s.account_id
		FROM student s
		LEFT JOIN attendance a
			ON s.account_id = a.account_id
		WHERE a.lecture_no = #{lectureNo}
	</select>
	<!-- 수강신청,학생,출석 테이블을 조인하여 학생들의 출석 상태 목록 상세보기 -->
	<select id="selectCalendarAttendanceListOne" parameterType="java.util.Map" resultMap="ResultTeacherAttendanceList">
		SELECT
			a.lecture_no,
			a.attendance_state,
			a.attendance_remark,
			a.attendance_day,
			s.account_id,
			s.student_name,
			s.student_gender,
			s.student_phone,
			s.account_id
		FROM student s 
		LEFT JOIN attendance a
			ON s.account_id = a.account_id
		LEFT JOIN class_registration cr
		 	ON cr.account_id = a.account_id
		WHERE a.lecture_no = #{lectureNo}
		AND cr.class_registration_state = "수강중"
		AND YEAR(attendance_day) = #{currentYear}
		AND MONTH(attendance_day) = #{currentMonth}
		AND DAY(attendance_day) = #{currentDay}
	</select>
	<!-- 출석 입력 -->
	<insert id="insertAttendance" parameterType="gd.fintech.lms.teacher.vo.Attendance">
		INSERT INTO attendance (
			lecture_no, 
			account_id, 
			attendance_day, 
			attendance_createdate, 
			attendance_updatedate, 
			attendance_state, 
			attendance_remark
		) VALUES (
			#{lectureNo}, 
			#{accountId}, 
			#{attendanceDay}, 
			NOW(), 
			NOW(), 
			#{attendanceState}, 
			#{attendanceRemark}
		)
	</insert>
	<!-- 출석 수정-->
	<update id="updateAttendance" parameterType="gd.fintech.lms.teacher.vo.Attendance">
		UPDATE attendance
		SET
			attendance_state = #{attendanceState}, 
			attendance_remark = #{attendanceRemark},
			attendance_updatedate = NOW()
		WHERE account_id = #{accountId}
		AND	lecture_no = #{lectureNo}
		AND YEAR(attendance_day) = #{currentYear} 
		AND MONTH(attendance_day) = #{currentMonth} 
		AND	DAY(attendance_day) = #{currentDay} 
	</update>
</mapper>